[user]
	name = robin-li
	email = robin-li-cn@outlook.com
[core]
    pager = less -FRS
    editor = vim
    autocrlf = false
    excludesfile = ~/.gitignore-global
    # Only use on Windows networks share : git config --local core.filemode false
    # filemode = false
	attributesfile = ~/.gitattributes
	trustctime = false

	# Treat spaces before tabs and all kinds of trailing whitespace as an error.
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

	# Make `git rebase` safer on macOS.
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Prevent showing files whose names contain non-ASCII symbols as unversioned.
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false

	# Speed up commands involving untracked files such as `git status`.
	# https://git-scm.com/docs/git-update-index#_untracked_cache
	untrackedCache = true
    editor = vim
[color]
	branch = always
	diff = always
	status = always
	interactive = always
	ui = always
	pager = true
	grep = always
	decorate = always
	showbranch = always

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[init]
    templatedir = ~/.git-templates
	defaultBranch = main
[commit]
    template = ~/.git-templates/git-commit

[apply]
    whitespace = nowarn

[status]
    showuntrackedfiles = all

[push]
    default = current
	# Make `git push` push relevant annotated tags when pushing branches out.
	followTags = true
[pull]
	rebase = false
[merge]

	# Include summaries of merged commits in newly created merge commit messages
	log = true
[diff]
    tool = icdiff
[help]

	# Automatically correct and execute mistyped commands.
	autocorrect = 1
[difftool]
    prompt = false

[difftool "icdiff"]
    cmd = icdiff --highlight --line-numbers -L \"$BASE\" -L \"$REMOTE\" \"$LOCAL\" \"$REMOTE\"

[alias]
    # Show defined aliases
    # aliases   = !"git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'"

    # Do everything we can to synchronize all changes
    get                 = !git pull --rebase && git submodule update --init --recursive
    put                 = "!put() { git commit -a -m \"$1\" && git push ; }; put"
    get-put             = "!getput() { git commit -a -m \"$1\" && git pull --rebase && git push && git submodule update --init --recursive ; }; getput"

    # Set upstream to current branch name
    set-upstream        = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`

    # Log
    tree                = log --graph --pretty=oneline --decorate
    pretty-log          = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr - %ci) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    change-log          = "!git log --graph --pretty=format:'%Cgreen%cd%Creset -%C(yellow)%d%Creset %s' --abbrev-commit --date=short"

    # Status
    status-short        = status -sb

    # Assume unchanged
    assume              = update-index --assume-unchanged
    unassume            = update-index --no-assume-unchanged
    assumed             = "!git ls-files -v | grep ^h | cut -c 3-"

    # ls-ignored -  list files that git has ignored.
    ls-ignored          = ls-files --others --i --exclude-standard
    ls                  = ls-files

    # Ignore file mode changes
    ignore-filemode     ="!git config --local core.filemode false"

    # Exactly match the remote branch
    full-reset          = "!git fetch origin && git reset --hard origin/master"

    # Publish the current branch to "origin" and set the current branch to track the upstream branch
    publish             = !"git push -u origin $(git branch-name)"
    # Unpublish the current branch by deleting the remote version of the current branch on "origin"
    unpublish           = !"git push origin :$(git branch-name)"

    # Open changed files
    subl                = !git-ls-files -m -z | xargs -0 subl
    sublall             = !git-ls-files -m -o --exclude-standard -z | xargs -0 subl

